name: Build and Test Image

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: label-studio-custom:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test:
    name: Test Image
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          load: true
          tags: label-studio-custom:test
          cache-from: type=gha

      - name: Start test environment
        run: |
          docker compose -f docker-compose.test.yml up -d

          # Wait for Label Studio to be healthy
          echo "Waiting for Label Studio to be ready..."
          timeout 300s bash -c 'until docker compose -f docker-compose.test.yml exec -T labelstudio curl -f http://localhost:8080/health 2>/dev/null; do sleep 5; done'

      - name: Check service health
        run: |
          docker compose -f docker-compose.test.yml ps
          docker compose -f docker-compose.test.yml logs labelstudio

      - name: Test SSO configuration
        run: |
          # Check if SSO environment variables are loaded
          docker compose -f docker-compose.test.yml exec -T labelstudio env | grep JWT_SSO || exit 1
          echo "✓ SSO configuration loaded"

      - name: Test hideHeader template
        run: |
          # Check if custom template exists
          docker compose -f docker-compose.test.yml exec -T labelstudio ls -la /label-studio/label_studio/templates/base.html || exit 1
          echo "✓ Custom template mounted"

      - name: Test custom permissions
        run: |
          # Check if custom permissions module exists
          docker compose -f docker-compose.test.yml exec -T labelstudio ls -la /label-studio/label_studio/custom_permissions || exit 1
          echo "✓ Custom permissions loaded"

      - name: Test custom API
        run: |
          # Check if custom API module exists
          docker compose -f docker-compose.test.yml exec -T labelstudio ls -la /label-studio/label_studio/custom_api || exit 1
          echo "✓ Custom API loaded"

      - name: Cleanup
        if: always()
        run: |
          docker compose -f docker-compose.test.yml down -v
